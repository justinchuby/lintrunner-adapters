[tool.poetry]
name = "lintrunner-adapters"
version = "0.1.0"
description = "Adapters and tools for lintrunner"
authors = ["Justin Chu <justinchu@microsoft.com>"]
license = "MIT"
readme = "README.md"
packages = [{include = "lintrunner_adapters"}]
include = [
    "LICENSE",
]

[tool.poetry.dependencies]
python = "^3.7"
click = "^8.1.3"

[tool.poetry.group.dev.dependencies]
lintrunner = "^0.9.3"
pytest = "^7.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
strict_optional = true
warn_return_any = true
warn_no_return = true
warn_redundant_casts = true
warn_incomplete_stub = true
no_implicit_optional = true
disallow_incomplete_defs = true
disallow_subclassing_any = true
warn_unused_configs = true
show_error_codes = true
show_column_numbers = true
ignore_missing_imports = true

[tool.isort]
profile = "black"

[tool.pylint.messages_control]
disable = [
    "duplicate-code",
    "fixme",
    "format",
    "import-error",
    "invalid-name",
    "line-too-long",
    "missing-docstring",
    "no-member",
    "too-few-public-methods",
    "too-many-arguments",
    "too-many-instance-attributes",
    # Repo specific ones
    "broad-except",
    "broad-except",
    "consider-using-f-string",
    "logging-fstring-interpolation",
    "no-else-continue",
    "redefined-builtin",
    "redefined-outer-name",
    "subprocess-run-check",
    "too-many-return-statements",
    "unnecessary-pass",
    "unused-argument",
    "unused-import",
]
