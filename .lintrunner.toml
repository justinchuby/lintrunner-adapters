# Configuration for lintrunner https://github.com/suo/lintrunner

[[linter]]
code = 'FLAKE8'
include_patterns = [
    '**/*.py',
    '**/*.pyi',
]
exclude_patterns = []
command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'flake8_linter',
    '--show-disable',
    '--',
    '@{{PATHSFILE}}',
]
init_command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'pip_init',
    '--dry-run={{DRYRUN}}',
    'flake8==7.0.0',
    'flake8-bugbear==24.1.17',
    'flake8-pyi==24.1.0',
    'dlint==0.14.1',
    'flake8-docstrings==1.7.0',
]

[[linter]]
code = 'MYPY'
include_patterns = [
    '**/*.py',
    '**/*.pyi',
]
exclude_patterns = [
    'examples/pytorch/*.py',
]
command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'mypy_linter',
    '--config=pyproject.toml',
    '--show-notes',
    '--show-disable',
    '--',
    '@{{PATHSFILE}}',
]
init_command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'pip_init',
    '--dry-run={{DRYRUN}}',
    'mypy==1.0.0',
]

[[linter]]
code = 'NOQA'
include_patterns = ['**/*.py', '**/*.pyi']
exclude_patterns = []
command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'grep_linter',
    '--pattern=# noqa([^:]|$)',
    '--linter-name=NOQA',
    '--error-name=unqualified noqa',
    """--error-description=\
        This line has an unqualified `noqa`; \
        please convert it to `noqa: XXXX`\
    """,
    '--',
    '@{{PATHSFILE}}',
]

[[linter]]
code = 'NEWLINE'
include_patterns = ['**']
exclude_patterns = []
command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'newlines_linter',
    '--',
    '@{{PATHSFILE}}',
]
is_formatter = true

[[linter]]
code = 'SPACES'
include_patterns = ['**']
exclude_patterns = []
command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'grep_linter',
    '--pattern=[[:blank:]]$',
    '--linter-name=SPACES',
    '--error-name=trailing spaces',
    '--replace-pattern=s/[[:blank:]]+$//',
    """--error-description=\
        This line has trailing spaces; please remove them.\
    """,
    '--',
    '@{{PATHSFILE}}',
]

[[linter]]
code = 'TABS'
include_patterns = ['**']
exclude_patterns = [
    '.lintrunner.toml',
]
command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'grep_linter',
    # @lint-ignore TXT2
    '--pattern=	',
    '--linter-name=TABS',
    '--error-name=saw some tabs',
    '--replace-pattern=s/\t/    /',
    """--error-description=\
        This line has tabs; please replace them with spaces.\
    """,
    '--',
    '@{{PATHSFILE}}',
]

[[linter]]
code = 'BLACK-ISORT'
include_patterns = [
    '**/*.py',
]
exclude_patterns = []
command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'black_isort_linter',
    '--fast',
    '--',
    '@{{PATHSFILE}}',
]
init_command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'pip_init',
    '--dry-run={{DRYRUN}}',
    'black==23.12.1', # Use 24.x when ruff styles are updated
    'isort==5.10.1',
]
is_formatter = true

[[linter]]
code = 'PYLINT'
include_patterns = [
    '**/*.py',
]
exclude_patterns = [
]
command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'pylint_linter',
    '--rcfile=pyproject.toml',
    '--jobs=0',
    '--show-disable',
    '--',
    '@{{PATHSFILE}}',
]
init_command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'pip_init',
    '--dry-run={{DRYRUN}}',
    'pylint==3.0.3',
]

[[linter]]
code = 'CLANGFORMAT'
include_patterns = [
    '**/*.c',
    '**/*.cc',
    '**/*.cpp',
    '**/*.h',
]
exclude_patterns = [
]
# init_command = [
# 'python',
# 'examples/pytorch/s3_init.py',
# '--config-json=examples/pytorch/s3_init_config.json',
# '--linter=clang-format',
# '--dry-run={{DRYRUN}}',
# '--output-dir=.lintbin',
# '--output-name=clang-format',
# ]
init_command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'pip_init',
    '--dry-run={{DRYRUN}}',
    'clang-format==15.0.4',
]
command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'clangformat_linter',
    '--binary=.lintbin/clang-format',
    '--fallback', # Use system clang-format as a fallback
    '--',
    '@{{PATHSFILE}}',
]
is_formatter = true

[[linter]]
code = 'EDITORCONFIG-CHECKER'
include_patterns = [
    '**/*',
]
exclude_patterns = [
]
command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'editorconfig_checker_linter',
    '--',
    '@{{PATHSFILE}}',
]
init_command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'pip_init',
    '--dry-run={{DRYRUN}}',
    'editorconfig-checker==2.6.2',
]

[[linter]]
code = 'PYUPGRADE'
is_formatter = true
include_patterns = [
    'lintrunner_adapters/**/*.py',
    'lintrunner_adapters/**/*.pyi',
]
exclude_patterns = []
command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'pyupgrade_linter',
    '--py37-plus',
    '--',
    '@{{PATHSFILE}}',
]
init_command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'pip_init',
    '--dry-run={{DRYRUN}}',
    'pyupgrade==3.3.1',
]

[[linter]]
code = 'REFURB'
include_patterns = [
    'lintrunner_adapters/**/*.py',
    'lintrunner_adapters/**/*.pyi',
]
exclude_patterns = []
command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'refurb_linter',
    '--',
    '@{{PATHSFILE}}',
]
init_command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'pip_init',
    '--dry-run={{DRYRUN}}',
    'refurb==1.15.0;python_version>="3.10"',
]

[[linter]]
code = 'RUFF'
include_patterns = [
    'lintrunner_adapters/**/*.py',
    'lintrunner_adapters/**/*.pyi',
]
exclude_patterns = []
command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'ruff_linter',
    '--config=pyproject.toml',
    '--show-disable',
    '--',
    '@{{PATHSFILE}}',
]
init_command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'pip_init',
    '--dry-run={{DRYRUN}}',
    'ruff==0.3.0',
]
is_formatter = true

[[linter]]
code = 'RUFF-FORMAT'
include_patterns = [
    '**/*.py',
]
exclude_patterns = []
command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'ruff_format_linter',
    '--config=pyproject.toml',
    '--',
    '@{{PATHSFILE}}',
]
init_command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'pip_init',
    '--dry-run={{DRYRUN}}',
    'ruff==0.3.0',
]
is_formatter = true

[[linter]]
code = 'TOML-SORT'
is_formatter = true
include_patterns = ['**/*.toml']
exclude_patterns = []
command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'toml_sort_linter',
    '--',
    '@{{PATHSFILE}}',
]
init_command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'pip_init',
    '--dry-run={{DRYRUN}}',
    'toml-sort==0.23.1',
]

[[linter]]
code = 'REQUIREMENTS-TXT'
is_formatter = true
include_patterns = ['requirements*.txt']
exclude_patterns = []
command = [
    'python',
    '-m',
    'lintrunner_adapters',
    'run',
    'requirements_txt_linter',
    '--',
    '@{{PATHSFILE}}',
]
